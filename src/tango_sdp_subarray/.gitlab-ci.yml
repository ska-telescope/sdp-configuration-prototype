# Local Gitlab-CI file for SDP Subarray

# ============================================================================
# Build python packages
# ============================================================================

build:ska-sdp-subarray_dev: # Executed on a commit
  extends: .build_python_dev
  variables:
    BUILD_PATH: src/tango_sdp_subarray

build:ska-sdp-subarray:
  extends: .build_python_release
  variables:
    BUILD_PATH: src/tango_sdp_subarray

# ============================================================================
# Testing built python package
# ============================================================================

test:ska-sdp-subarray:
  extends: .tango_tests
  stage: test
#  services:
#    - name: quay.io/coreos/etcd:latest
#      alias: etcd
#      command:
#        - /usr/local/bin/etcd
#        - "--advertise-client-urls=http://0.0.0.0:2379"
#        - "--listen-client-urls=http://0.0.0.0:2379"
#        - "--initial-advertise-peer-urls=http://0.0.0.0:2380"
#        - "--listen-peer-urls=http://0.0.0.0:2380"
#        - "--initial-cluster=default=http://0.0.0.0:2380"
  variables:
    SDP_CONFIG_HOST: etcd
    TOGGLE_CONFIG_DB: 0
    TOGGLE_CBF_OUTPUT_LINK: 1
  before_script:
    - pip install --upgrade ska-sdp-logging ska-sdp-config
    - pip install future
    - pip install --index-url https://nexus.engageska-portugal.pt/repository/pypi/simple lmcbaseclasses==0.5.1
  script:
    - cd src/tango_sdp_subarray
    - mkdir -p build/reports
    - python setup.py test
#    - mv .coverage ../../$CI_JOB_NAME.coverage
    - mv htmlcov build/sdp_subarray_htmlcov
    - mv coverage.xml build/code-coverage.xml
    - mv build ../../build
  artifacts:
    paths:
      - build
    expire_in: 1 week
    when: always

## ============================================================================
## Publish python packages
## ============================================================================

publish:ska-sdp-subarray-dev:
  extends: .publish_python_dev
  dependencies:
    - build:ska-sdp-subarray_dev
  variables:
    BUILD_PATH: src/tango_sdp_subarray

publish:ska-sdp-subarray:
  extends: .publish_python_release
  dependencies:
    - build:ska-sdp-subarray
  variables:
    BUILD_PATH: src/tango_sdp_subarray

## ============================================================================
## Build, tag and push Docker development images
## ============================================================================

# This needs to be updated. Might be best to use Gitlab registry for
# development images, otherwise it will load the nexus registry with lots of
# development images.

# Build and push `tangods_sdp_subarray` image.
build:tangods_sdp_subarray:
  stage: build
  extends: .build_docker
  variables:
    BUILD_PATH: src/tango_sdp_subarray

### ============================================================================
### Test Docker development images
### ============================================================================
#
## Placeholder for testing. Currently not doing anything.
# test:tangods_sdp_subarray:
#  stage: test
#  extends: .pull_docker
#  variables:
#    BUILD_PATH: src/tango_sdp_subarray
#  script:
#    - echo "Placeholder for testing docker images"

## ============================================================================
## Tag and push Docker latest images (master only)
## ============================================================================

publish:tangods_sdp_subarray:
  extends: .publish_template
  dependencies:
    - build:tangods_sdp_subarray
  variables:
    BUILD_PATH: src/tango_sdp_subarray


## Create an XRay test execution report
## (currently only for the SDPSubarray tests)
#.xray_report:
#  stage: post_test
#  tags: [docker]
#  image: python:latest
#  script:
#    - 'curl -X POST -H "Content-Type: application/json" --fail
#         -H "Authorization: Basic $JIRA_AUTH"
#         --data @cucumber.json
#         https://jira.skatelescope.org/rest/raven/1.0/import/execution/cucumber'
#  retry: 2 # In case JIRA doesn't work first time
#
## Update XRay links in JIRA automatically This is done only for the master
#xray_report:
#  extends: .xray_report
#  when: always
#  only: [master]
#  allow_failure: true