#
# Note: Tests can be run locally with
#   gitlab-runner exec <executor, eg. docker> <job name>
#

stages:
  - build
  - test
  - post_test
  - publish
  - pages

## ============================================================================
## Common settings for building docker images
## ============================================================================

.build_docker:
  dependencies: []
  variables:
    DOCKER_REGISTRY_HOST: $DOCKER_REGISTRY_HOST
    DOCKER_REGISTRY_USER: $CI_PROJECT_NAME
    GIT_VERSION: ${CI_COMMIT_SHA:0:8}
  tags:
    - docker
    - engageska
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add make git
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  script:
    - cd $BUILD_PATH
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME pull
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME build
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME push
  retry: 2

.pull_docker:
  dependencies: []
  variables:
    DOCKER_REGISTRY_HOST: $DOCKER_REGISTRY_HOST
    DOCKER_REGISTRY_USER: $CI_PROJECT_NAME
    GIT_VERSION: ${CI_COMMIT_SHA:0:8}
  tags:
    - docker
    - engageska
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add make git
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  script:
    - cd $BUILD_PATH
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME pull_default
  retry: 2

.push_docker:
  dependencies: []
  variables:
    DOCKER_REGISTRY_HOST: $DOCKER_REGISTRY_HOST
    DOCKER_REGISTRY_USER: $CI_PROJECT_NAME
    GIT_VERSION: ${CI_COMMIT_SHA:0:8}
  tags:
    - docker
    - engageska
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - apk add make git
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  script:
    - cd $BUILD_PATH
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME pull_default
    - make DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST DOCKER_REGISTRY_USER=$CI_PROJECT_NAME push_version
  retry: 2

# ============================================================================
# Local Include Gitlab-CI Files
# ============================================================================
include:
  - local: /src/tango_sdp_master/.gitlab-ci.yml
  - local: /src/tango_sdp_subarray/.gitlab-ci.yml
  - local: /src/config_db/.gitlab-ci.yml
  - local: /src/processing_controller/.gitlab-ci.yml
  - local: /src/helm_deploy/.gitlab-ci.yml
  - local: /src/vis_receive/.gitlab-ci.yml

# ============================================================================
# Build documentation
# ============================================================================

build_docs:
  stage: test
  image: nexus.engageska-portugal.pt/sdp-prototype/pytango_ska_dev:latest
  before_script:
    - pip install -r docs/requirements.txt
  script:
    - make -C docs html
  artifacts:
    paths: [docs/build/html/]
    expire_in: 1 day

# ============================================================================
# Generate test reports
# ============================================================================

# Generate combined test coverage report
coverage_report:
  stage: post_test
  tags: [docker]
  image: python:latest
  variables:
    TRAVIS_JOB_ID: $CI_PIPELINE_IID
  before_script:
    - pip install coverage
    - pip install python-coveralls
  script:
    - coverage combine *.coverage
    - coverage report
    - coverage html
  coverage: '/TOTAL\s+\d+\s+\d+\s+\d+\s+\d+\s+(\d+\%)/'
#  after_script:
#    - coveralls --merge=coveralls.json
  artifacts:
    paths: [htmlcov/]
    expire_in: 1 week

# ============================================================================
# Publish reports
# ============================================================================

# Generate gitlab pages.
pages:
  stage: pages
  tags: [docker]
  only: [master]
  image: python:latest
  dependencies: [coverage_report]
  script:
    - cp -R htmlcov public
  artifacts:
    paths: [public/]

## ============================================================================
## Publish documentation (master only)
## ============================================================================




